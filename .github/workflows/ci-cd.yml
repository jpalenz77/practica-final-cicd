name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Job 1: Build y Test
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

      - name: Display coverage summary
        run: |
          echo "### Test Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat coverage/coverage-summary.txt || echo "No coverage summary found"
          echo '```' >> $GITHUB_STEP_SUMMARY

  # Job 2: Build Docker (solo en main)
  build-docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t my-api-cicd:${{ github.sha }} .
          docker tag my-api-cicd:${{ github.sha }} my-api-cicd:latest

      - name: Test Docker image
        run: |
          docker run -d -p 3000:3000 --name test-container my-api-cicd:latest
          sleep 5
          curl -f http://localhost:3000/health || exit 1
          docker stop test-container
          docker rm test-container

      - name: Display build info
        run: |
          echo "### Docker Build Success âœ…" >> $GITHUB_STEP_SUMMARY
          echo "Image: my-api-cicd:${{ github.sha }}" >> $GITHUB_STEP_SUMMARY